diff --git a/hw/dv/sv/common_ifs/pins_if.sv b/hw/dv/sv/common_ifs/pins_if.sv
index 2a419ed7..e8cac7c4 100644
--- a/hw/dv/sv/common_ifs/pins_if.sv
+++ b/hw/dv/sv/common_ifs/pins_if.sv
@@ -5,7 +5,8 @@
 // Interface: pins_if
 // Description: Pin interface for driving and sampling individual pins such as interrupts, alerts
 // and gpios.
-`ifndef SYNTHESIS
+//`ifndef SYNTHESIS
+`ifndef SV2V
 
 interface pins_if #(
   parameter int Width = 1
@@ -84,7 +85,8 @@ interface pins_if #(
       // any 'x' value on pin, that may result due to conflicting values
       // between 'value to be driven out' and the external driver's value.
       assign pins[i] = pins_oe[i] ? pins_o[i] : 1'bz;
-`ifdef VERILATOR
+//`ifdef VERILATOR
+`ifdef SV2V
       assign pins[i] = ~pins_oe[i] ? pins_int[i] : 1'bz;
 `else
       assign (pull0, pull1) pins[i] = ~pins_oe[i] ? pins_int[i] : 1'bz;
diff --git a/hw/ip/hmac/rtl/hmac.sv b/hw/ip/hmac/rtl/hmac.sv
index a83ac4b5..aab50b4b 100644
--- a/hw/ip/hmac/rtl/hmac.sv
+++ b/hw/ip/hmac/rtl/hmac.sv
@@ -491,6 +491,7 @@ module hmac
   // Assertions, Assumptions, and Coverpoints //
   //////////////////////////////////////////////
 
+`ifndef SV2V
 `ifndef VERILATOR
 `ifndef SYNTHESIS
   // HMAC assumes TL-UL mask is byte-aligned.
@@ -548,5 +549,6 @@ module hmac
 
 `endif // SYNTHESIS
 `endif // VERILATOR
+`endif // SV2V
 
 endmodule
diff --git a/hw/ip/prim_generic/rtl/prim_generic_pad_wrapper.sv b/hw/ip/prim_generic/rtl/prim_generic_pad_wrapper.sv
index fa1f8906..cb1555e2 100644
--- a/hw/ip/prim_generic/rtl/prim_generic_pad_wrapper.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_pad_wrapper.sv
@@ -31,7 +31,8 @@ module prim_generic_pad_wrapper #(
   assign oe       = oe_i & ((od & ~out) | ~od);
 
 // driving strength attributes are not supported by verilator
-`ifdef VERILATOR
+// `ifdef VERILATOR
+`ifdef SV2V
   assign inout_io = (oe) ? out : 1'bz;
 `else
   // different driver types
diff --git a/hw/ip/tlul/rtl/tlul_assert.sv b/hw/ip/tlul/rtl/tlul_assert.sv
index e3c19aa4..0ef906be 100644
--- a/hw/ip/tlul/rtl/tlul_assert.sv
+++ b/hw/ip/tlul/rtl/tlul_assert.sv
@@ -90,6 +90,7 @@ module tlul_assert #(
   // define sequences for request checks //
   /////////////////////////////////////////
 
+`ifndef SV2V
   sequence h2d_pre_S;
     h2d.a_valid;
   endsequence
@@ -204,6 +205,7 @@ module tlul_assert #(
     ((!d_mask[6]) || (d_mask[6] && !$isunknown(d_data[8*6 +: 8]))) &&
     ((!d_mask[7]) || (d_mask[7] && !$isunknown(d_data[8*7 +: 8])));
   endsequence
+`endif
 
   ///////////////////////////////////
   // assemble properties and check //
diff --git a/hw/top_earlgrey/ip/rv_plic/rtl/autogen/rv_plic.sv b/hw/top_earlgrey/ip/rv_plic/rtl/autogen/rv_plic.sv
index 28acb95d..86043c75 100644
--- a/hw/top_earlgrey/ip/rv_plic/rtl/autogen/rv_plic.sv
+++ b/hw/top_earlgrey/ip/rv_plic/rtl/autogen/rv_plic.sv
@@ -43,7 +43,7 @@ module rv_plic import rv_plic_reg_pkg::*; #(
   output logic [NumTarget-1:0] msip_o
 );
 
-  import rv_plic_reg_pkg::*;
+  // import rv_plic_reg_pkg::*;
 
   rv_plic_reg2hw_t reg2hw;
   rv_plic_hw2reg_t hw2reg;
diff --git a/hw/top_earlgrey/rtl/autogen/top_earlgrey.sv b/hw/top_earlgrey/rtl/autogen/top_earlgrey.sv
index 73d19d45..634b0871 100644
--- a/hw/top_earlgrey/rtl/autogen/top_earlgrey.sv
+++ b/hw/top_earlgrey/rtl/autogen/top_earlgrey.sv
@@ -3,7 +3,7 @@
 // SPDX-License-Identifier: Apache-2.0
 
 module top_earlgrey #(
-  parameter bit IbexPipeLine = 0
+  parameter bit IbexPipeLine = 1
 ) (
   // Clock and Reset
   input               clk_i,
@@ -222,8 +222,8 @@ module top_earlgrey #(
     .MHPMCounterWidth    (40),
     .RV32E               (0),
     .RV32M               (1),
-    .DmHaltAddr          (ADDR_SPACE_DEBUG_MEM + dm::HaltAddress),
-    .DmExceptionAddr     (ADDR_SPACE_DEBUG_MEM + dm::ExceptionAddress),
+    // .DmHaltAddr          (ADDR_SPACE_DEBUG_MEM + dm::HaltAddress),
+    // .DmExceptionAddr     (ADDR_SPACE_DEBUG_MEM + dm::ExceptionAddress),
     .PipeLine            (IbexPipeLine)
   ) core (
     // clock and reset
@@ -254,34 +254,34 @@ module top_earlgrey #(
   // Debug Module (RISC-V Debug Spec 0.13)
   //
 
-  rv_dm #(
-    .NrHarts     (1),
-    .IdcodeValue (JTAG_IDCODE)
-  ) u_dm_top (
-    .clk_i         (main_clk),
-    .rst_ni        (lc_rst_n),
-    .testmode_i    (1'b0),
-    .ndmreset_o    (ndmreset_req),
-    .dmactive_o    (),
-    .debug_req_o   (debug_req),
-    .unavailable_i (1'b0),
-
-    // bus device with debug memory (for execution-based debug)
-    .tl_d_i        (tl_debug_mem_d_h2d),
-    .tl_d_o        (tl_debug_mem_d_d2h),
-
-    // bus host (for system bus accesses, SBA)
-    .tl_h_o        (tl_dm_sba_h_h2d),
-    .tl_h_i        (tl_dm_sba_h_d2h),
-
-    //JTAG
-    .tck_i            (jtag_tck_i),
-    .tms_i            (jtag_tms_i),
-    .trst_ni          (jtag_trst_ni),
-    .td_i             (jtag_td_i),
-    .td_o             (jtag_td_o),
-    .tdo_oe_o         (       )
-  );
+  // rv_dm #(
+  //   .NrHarts     (1),
+  //   .IdcodeValue (JTAG_IDCODE)
+  // ) u_dm_top (
+  //   .clk_i         (main_clk),
+  //   .rst_ni        (lc_rst_n),
+  //   .testmode_i    (1'b0),
+  //   .ndmreset_o    (ndmreset_req),
+  //   .dmactive_o    (),
+  //   .debug_req_o   (debug_req),
+  //   .unavailable_i (1'b0),
+
+  //   // bus device with debug memory (for execution-based debug)
+  //   .tl_d_i        (tl_debug_mem_d_h2d),
+  //   .tl_d_o        (tl_debug_mem_d_d2h),
+
+  //   // bus host (for system bus accesses, SBA)
+  //   .tl_h_o        (tl_dm_sba_h_h2d),
+  //   .tl_h_i        (tl_dm_sba_h_d2h),
+
+  //   //JTAG
+  //   .tck_i            (jtag_tck_i),
+  //   .tms_i            (jtag_tms_i),
+  //   .trst_ni          (jtag_trst_ni),
+  //   .td_i             (jtag_td_i),
+  //   .td_o             (jtag_td_o),
+  //   .tdo_oe_o         (       )
+  // );
 
   // ROM device
   logic        rom_req;
diff --git a/hw/vendor/lowrisc_ibex/shared/rtl/prim_assert.sv b/hw/vendor/lowrisc_ibex/shared/rtl/prim_assert.sv
index 8234d61f..e891525c 100644
--- a/hw/vendor/lowrisc_ibex/shared/rtl/prim_assert.sv
+++ b/hw/vendor/lowrisc_ibex/shared/rtl/prim_assert.sv
@@ -22,11 +22,13 @@
 ///////////////////
 
 // local helper macro to reduce code clutter. undefined at the end of this file
+`ifndef SV2V
 `ifndef VERILATOR
 `ifndef SYNTHESIS
 `define INC_ASSERT
 `endif
 `endif
+`endif
 
 // Converts an arbitrary block of code into a Verilog string
 `define PRIM_STRINGIFY(__x) `"__x`"
